{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","reportWebVitals.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/state.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","UPDATE_NEW_POST_TEXT","profileReducer","state","action","type","newPost","id","message","newPostText","likes","posts","push","newText","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogsReducer","newMessageBody","body","messages","store","_state","profilePage","messagesPage","dialogs","name","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","window","Header","className","s","header","to","src","Navbar","nav","item","activeClassName","activeLink","Post","props","avat","likee","like","MyPosts","postsElements","map","p","newPostElement","React","createRef","content","postsBlock","onChange","text","updateNewPostTextActionCreator","current","value","ref","onClick","ProfileInfo","open","ava","Profile","DialogItem","path","dialog","active","Message","Dialog","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","e","target","updateNewMessageBodyCreator","placeholder","App","render","News","Music","Settings","rerenderEntireTree","ReactDOM","bind","document","getElementById"],"mappings":"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","file":"static/js/main.d26ebbc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"content\":\"Post_content__1RpGJ\",\"avat\":\"Post_avat__3hcfr\",\"like\":\"Post_like__oViQh\",\"likee\":\"Post_likee__3kIjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__2oxPX\",\"ava\":\"ProfileInfo_ava__K96Gt\",\"open\":\"ProfileInfo_open__2l0t7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst profileReducer = (state, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 3,\n                message: state.newPostText,\n                likes: 0\n            };\n            state.posts.push(newPost);\n            state.newPostText = '';\n            return state;\n        case UPDATE_NEW_POST_TEXT:\n            state.newPostText = action.newText;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = () => ({type: ADD_POST});\nexport const updateNewPostTextActionCreator = (text) =>\n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\n\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\n\nconst dialogsReducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY:\n            state.newMessageBody = action.body;\n            return state;\n        case SEND_MESSAGE :\n            let body = state.newMessageBody;\n            state.newMessageBody = \"\";\n            state.messages.push({id: 6, message: body});\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\nexport const updateNewMessageBodyCreator = (body) =>\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body});\n\nexport default dialogsReducer;","import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: 'HI, how are you?', likes: 12},\n                {id: 2, message: \"It's my first post!\", likes: 111}\n            ],\n            newPostText: 'Введите текст'\n        },\n        messagesPage: {\n            dialogs: [\n                {id: 1, name: 'Smems'},\n                {id: 2, name: 'Bled'},\n                {id: 3, name: 'NoName'},\n                {id: 4, name: 'Anonimus'},\n                {id: 5, name: 'Snowman'}\n            ],\n            messages: [\n                {id: 1, message: 'Hi'},\n                {id: 2, message: 'How are you'},\n                {id: 3, message: 'Im OK'},\n                {id: 4, message: 'And you'},\n                {id: 5, message: 'Im fine'}\n            ],\n            newMessageBody: \"\"\n        },\n    },\n    _callSubscriber() {\n        console.log('state changed');\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;  //observer - патерн. export in index.js, callback in state.js\n    },\n\n    dispatch(action) { // action - объект у которого есть type\n\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\n        this._state.messagesPage = dialogsReducer(this._state.messagesPage, action);\n        this._callSubscriber(this._state);\n        }\n    }\n\n\nexport default store;\nwindow.state = store;\n// store - OOP","import React from 'react';\nimport s from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n/*let s = {\n//'header': 'Header_header__3mObx'\n}*/\n\n\n\nconst Header = () => {\nreturn <nav className={s.header}>\n    <NavLink to=\"/profile\">\n        <img src ='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png'></img>\n    </NavLink>\n</nav>\n\n\n}\n\nexport default Header;","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\n/*let s = {\n'nav': 'Navbar_nav__3VT01',\n'item': 'Navbar_item__1Raqz'\n\n}*/\n\n/*let c1 = 'item';\nlet c2 = 'active';\n\nlet classes = c1 + \" \" + c2;\nlet classesNew = `${s.item} ${s.active}`; */\n\nconst Navbar = () => {\nreturn <nav className={s.nav}>\n    <div className={s.item}>\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n    </div>\n    <div className={s.item}>\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n    </div>\n    <div className={s.item}>\n        <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n    </div>\n    <div className={s.item}>\n        <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n    </div>\n    <div className={s.item}>\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n    </div>\n</nav>\n\n\n}\n\nexport default Navbar;","import React from 'react';\nimport  s from './Post.module.css';\n\n/*let s = {\n//'item': 'Profile_item__10O_i'\n}*/\n\nconst Post = (props) => {\n\nreturn (\n<div className={s.item}>\n   <img className={s.avat} src='https://cdn.shopify.com/s/files/1/0023/8469/1252/products/LED-Tiger_5000x.jpg?v=1587676083'></img>\n   { props.message }\n   <div>\n     <img className={s.likee} src='https://cdn.worldvectorlogo.com/logos/facebook-like.svg'></img>\n     <span className={s.like}> \n     { props.likes }\n     </span>\n   </div>\n   </div>\n   \n)\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\n\nconst MyPosts = (props) => {\n    let postsElements = props.posts.map(p => <Post message={p.message} likes={p.likes}/>);\n\n    let newPostElement = React.createRef();\n\n    let addPost = () => {\n        // props.addPost();\n        props.dispatch(addPostActionCreator());\n    }\n\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        // props.updateNewPostText(text);\n        //let action = { type: 'UPDATE-NEW-POST-TEXT', newText: text };\n        let action = updateNewPostTextActionCreator(text);\n        props.dispatch(action);\n    }\n\n    return <div className={s.content}>\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n        </div>\n        <div>\n            <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\n        </div>\n        <div>\n            <button onClick={addPost}>Add Post</button>\n        </div>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>\n}\n\nexport default MyPosts;","import React from 'react';\nimport  s from './ProfileInfo.module.css';\n\n\n/*let s = {\n//'item': 'Profile_item__10O_i'\n}*/\n\nconst ProfileInfo = () => {\nreturn (\n    <div>\n        <div>\n            <img className={s.open} src='https://www.spellbrand.com/images/blog/images/neon-logo-designs.jpg'/>\n        </div>\n        <div>\n            <img className={s.ava} src='https://cdn.shopify.com/s/files/1/0023/8469/1252/products/LED-Tiger_5000x.jpg?v=1587676083'/>\n        </div>\n    </div>\n)\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport  s from './Profile.module.css';\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo />\n            <MyPosts posts={props.profilePage.posts}\n                     newPostText={props.profilePage.newPostText}\n                     dispatch={props.dispatch}/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id\n\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>\n}\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return <div className={s.Dialog}>{props.message}</div>\n}\n\nexport default Message;","import React from \"react\";\nimport s from './Dialogs.module.css';\n\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\n\n\nconst Dialogs = (props) => {\n\n    let state = props.store.getState().messagesPage;\n\n    let dialogsElements = state.dialogs.map ( d => <DialogItem name={d.name} id={d.id} /> );\n    let messagesElements = state.messages.map ( m => <Message message={m.message}/>);\n    let newMessageBody = state.newMessageBody;\n\n    let onSendMessageClick = () => {\n        props.store.dispatch(sendMessageCreator());\n    }\n    let onNewMessageChange = (e) => {\n       let body = e.target.value;\n       props.store.dispatch(updateNewMessageBodyCreator(body));\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={s.messages}>\n                <div>{ messagesElements }</div>\n                <div>\n                    <div>\n                        <textarea value={newMessageBody}\n                                  onChange={onNewMessageChange}\n                                  placeholder='Enter your message'></textarea>\n                    </div>\n                    <div>\n                        <button onClick={onSendMessageClick}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Dialogs;","import React from \"react\";\nimport s from './Music.module.css';\nconst Dialogs = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default  Dialogs;","import React from \"react\";\nimport s from './News.module.css';\nconst Dialogs = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default  Dialogs;","import React from \"react\";\nimport s from './Settings.module.css';\nconst Dialogs = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default  Dialogs;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nconst App = (props) => {\n  return (\n        <div className= 'app-wrapper'>\n            <Header/>\n            <Navbar/>\n            <div className= 'app-wrapper-content'>\n                <Route path=\"/profile\"\n                       render={ () => <Profile\n                           profilePage={props.state.profilePage}\n                           dispatch={props.dispatch}/> }/>\n\n                <Route path=\"/dialogs\"\n                       render={ () => <Dialogs store={props.store}/> }/>\n\n                <Route path=\"/news\" render={ () => <News /> }/>\n                <Route path=\"/music\" render={ () => <Music /> }/>\n                <Route path=\"/settings\" render={ () => <Settings /> }/>\n            </div>\n        </div>\n\n  );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from './redux/state';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state} dispatch={store.dispatch.bind(store)} store={store}/>\n        </BrowserRouter>, document.getElementById('root'));\n}\n\nrerenderEntireTree (store.getState());\nstore.subscribe(rerenderEntireTree); //export in index.js, callback in state.js\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}